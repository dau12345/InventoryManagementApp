@model ResponsePagination

<partial name="_Message" />

<div class="d-flex justify-content-between align-items-center mb-4">
    <h5 class="fw-bold">Equipment Damage Log</h5>
</div>

<div class="card">
    <div class="table-responsive text-nowrap">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th></th>
                    <th>Log Id</th>
                    <th>Report Date</th>
                    <th>Report State</th>
                    <th>Replace Date</th>
                    <th>Replace State</th>
                    <th>Toolbox ID</th>
                    <th>Driver</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody class="table-border-bottom-0 accordion" id="accordionExample">

                @{
                    int i = 1;
                    foreach (JsonElement item in Model.Entities)
                    {
                        EqDamageLogVM damage = JsonSerializer.Deserialize<EqDamageLogVM>(item, new JsonSerializerOptions
                        {
                            PropertyNameCaseInsensitive = true,
                            DefaultIgnoreCondition = JsonIgnoreCondition.WhenWritingNull
                        });
                        <tr class="accordion-item">
                            <td>@i</td>
                            <td>@damage.EqDamageLogID</td>
                            <td>@damage.ReportDate</td>
                            <td> <partial name="_LogStateColor" model="@damage.LogState" /> </td>
                            <td>@damage.ReplaceDate</td>
                            <td><partial name="_RestockStateColor" model="@damage.RestockState" /></td>
                            <td>@damage.ToolboxID</td>
                            <td>@damage.AppUserName</td>
                            <td>
                                <div class="dropdown">
                                    <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                        <i class="bx bx-dots-vertical-rounded"></i>
                                    </button>
                                    <div class="dropdown-menu">
                                        <a class="dropdown-item" asp-controller="EqDamageLog" asp-action="AcceptEqDamageLog" asp-route-eqDamageLogID="@damage.EqDamageLogID"><i class="bx bx-check-circle me-1"></i> Accept</a>
                                        <a class="dropdown-item" asp-controller="EqDamageLog" asp-action="RejectEqDamageLog" asp-route-eqDamageLogID="@damage.EqDamageLogID"><i class="bx bx-x-circle me-1"></i> Reject</a>
                                    </div>
                                </div>
                            </td>
                            <td data-bs-toggle="collapse" data-bs-target="#dmgdetail-@i" aria-expanded="false" aria-controls="dmgdetail-@i"><i class="bx bx-expand-alt bx-burst"></i></td>
                        </tr>
                        <tr>
                            <td colspan="10">
                                <div id="dmgdetail-@i" class="accordion-collapse collapse"
                                     data-bs-parent="#accordionExample">
                                    <div class="accordion-body">
                                        <div class="card">
                                            <div class="table-responsive text-nowrap">
                                                <table class="table table-primary">
                                                    <thead>
                                                        <tr>
                                                            <th></th>
                                                            <th>Equipment</th>
                                                            <th>Quantity</th>
                                                            <th>Comment</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody class="table-border-bottom-0">

                                                        @{
                                                            int j = 1;
                                                            foreach (var detail in damage.DetailEqDamageLogs)
                                                            {
                                                                <tr>
                                                                    <td>@j</td>
                                                                    <td>@detail.EquipmentName</td>
                                                                    <td>@detail.Quantity</td>
                                                                    <td>@detail.Comment</td>
                                                                </tr>
                                                                j++;
                                                            }
                                                        }

                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                        i++;
                    }
                }

            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <div class="demo-inline-spacing">
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @{
                    int start = 1;
                    int max = Model.Pages;

                    if (Model.CurrentPage == 1 || Model.CurrentPage - 1 == 1 || Model.Pages <= 5)
                    {
                        start = 1;
                    }
                    else if (Model.Pages - Model.CurrentPage >= 3)
                    {
                        start = Model.CurrentPage - 1;
                    }
                    else
                    {
                        start = Model.Pages - 4;
                    }

                    if (Model.Pages > 5)
                    {
                        max = start + 4;   
                    }

                    for (int j = start; j < max + 1; j++)
                    {
                        if (j == Model.CurrentPage)
                        {
                            <li class="page-item active">
                                <a class="page-link">@j</a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item"><a class="page-link" asp-controller="EqDamageLog" asp-action="Index" asp-route-page="@j">@j</a></li>
                        }
                    }
                }
            </ul>
        </nav>
    </div>
</div>